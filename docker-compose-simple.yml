services:

  service-registry:
    image: service-registry:latest
    container_name: service-registry
    ports:
      - '8761:8761'
    networks:
      - backend

  config-server:
    image: config-server:latest
    container_name: config-server
    ports:
      - '9296:9296'
    environment:
      - EUREKA_SERVER_ADDRESS=http://service-registry:8761/eureka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://config-server:9296/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - service-registry
    networks:
      - backend

  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - '9090:9090'
    environment:
      - EUREKA_SERVER_ADDRESS=http://service-registry:8761/eureka
      - CONFIG_SERVER_URL=http://config-server:9296
      - ZIPKIN_URL=http://zipkin:9411
      - REDIS_URL=redis://redis:6379
    depends_on:
      config-server:
        condition: service_healthy
      zipkin:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend


  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - backend

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend


  auth-service:
    image: auth-service:latest
    container_name: auth-service
    ports:
      - '7777:7777'
    environment:
      - EUREKA_SERVER_ADDRESS=http://service-registry:8761/eureka
      - CONFIG_SERVER_URL=http://config-server:9296
      - spring.datasource.url=jdbc:mysql://database:3306/userdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Turkey
      - spring.datasource.username=root
      - spring.datasource.password=Pass@1234
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - backend


  product-service:
    image: product-service:latest
    container_name: product-service
    ports:
      - '8081:8081'
    environment:
      - EUREKA_SERVER_ADDRESS=http://service-registry:8761/eureka
      - CONFIG_SERVER_URL=http://config-server:9296
      - spring.datasource.url=jdbc:mysql://database:3306/productdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Turkey
      - spring.datasource.username=root
      - spring.datasource.password=Pass@1234
      - ZIPKIN_URL=http://zipkin:9411
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - backend

  order-service:
    image: order-service:latest
    container_name: order-service
    ports:
      - '8082:8082'
    environment:
      - EUREKA_SERVER_ADDRESS=http://service-registry:8761/eureka
      - CONFIG_SERVER_URL=http://config-server:9296
      - spring.datasource.url=jdbc:mysql://database:3306/orderdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Turkey
      - spring.datasource.username=root
      - spring.datasource.password=Pass@1234
      - ZIPKIN_URL=http://zipkin:9411
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - backend


  payment-service:
    image: payment-service:latest
    container_name: payment-service
    ports:
      - '8083:8083'
    environment:
      - EUREKA_SERVER_ADDRESS=http://service-registry:8761/eureka
      - CONFIG_SERVER_URL=http://config-server:9296
      - spring.datasource.url=jdbc:mysql://database:3306/paymentdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Turkey
      - spring.datasource.username=root
      - spring.datasource.password='Pass@1234'
      - ZIPKIN_URL=http://zipkin:9411
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - backend


  database:
    container_name: mysql-database
    # image: mysql:latest
    image: mysql:8.0
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_USER: root
      MYSQL_PASSWORD: ''
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10


networks:
  backend:
    driver: bridge

volumes:
  db-data: