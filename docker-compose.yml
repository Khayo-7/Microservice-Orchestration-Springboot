services:

  eureka-service:
    image: khayo/eureka-service
    container_name: eureka-service
    ports:
      - '8761:8761'
    networks:
      - micronet

  config-server:
    image: khayo/config-server
    container_name: config-server
    ports:
      - '9296:9296'
    environment:
      - EUREKA_SERVER_ADDRESS=${EUREKA_SERVER_ADDRESS}
    depends_on:
      - eureka-service
    networks:
      - micronet
    healthcheck:
      test: [ "CMD", "true" ]
      # test: [ "CMD", "curl", "-f", "http://config-server:9296/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    image: khayo/api-gateway
    container_name: api-gateway
    ports:
      - '9000:9090'
    environment:
      - EUREKA_SERVER_ADDRESS=${EUREKA_SERVER_ADDRESS}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - ZIPKIN_URL=${ZIPKIN_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      config-server:
        condition: service_healthy
      zipkin:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - micronet


  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - micronet

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - micronet


  auth-service:
    image: khayo/auth-service
    container_name: auth-service
    ports:
      - '7777:7777'
    environment:
      - EUREKA_SERVER_ADDRESS=${EUREKA_SERVER_ADDRESS}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - spring.datasource.url=jdbc:mysql://mysql:3306/userdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      - spring.datasource.username=${MYSQL_ROOT_USER}
      - spring.datasource.password=${MYSQL_ROOT_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - micronet


  product-service:
    image: khayo/product-service
    container_name: product-service
    ports:
      - '8081:8081'
    environment:
      - EUREKA_SERVER_ADDRESS=${EUREKA_SERVER_ADDRESS}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - spring.datasource.url=jdbc:mysql://mysql:3306/productdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      - spring.datasource.username=${MYSQL_ROOT_USER}
      - spring.datasource.password=${MYSQL_ROOT_PASSWORD}
      - ZIPKIN_URL=${ZIPKIN_URL}
    depends_on:
      mysql:
        condition: service_healthy
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - micronet

  order-service:
    image: khayo/order-service
    container_name: order-service
    ports:
      - '8082:8082'
    environment:
      - EUREKA_SERVER_ADDRESS=${EUREKA_SERVER_ADDRESS}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - spring.datasource.url=jdbc:mysql://mysql:3306/orderdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      - spring.datasource.username=${MYSQL_ROOT_USER}
      - spring.datasource.password=${MYSQL_ROOT_PASSWORD}
      - ZIPKIN_URL=${ZIPKIN_URL}
    depends_on:
      mysql:
        condition: service_healthy
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - micronet


  payment-service:
    image: khayo/payment-service
    container_name: payment-service
    ports:
      - '8083:8083'
    environment:
      - EUREKA_SERVER_ADDRESS=${EUREKA_SERVER_ADDRESS}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - spring.datasource.url=jdbc:mysql://mysql:3306/paymentdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      - spring.datasource.username=${MYSQL_ROOT_USER}
      - spring.datasource.password=${MYSQL_ROOT_PASSWORD}
      - ZIPKIN_URL=${ZIPKIN_URL}
    depends_on:
      mysql:
        condition: service_healthy
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - micronet


  mysql:
    image: mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      # - MYSQL_USER=${MYSQL_USER}
      # - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - micronet


networks:
  micronet:
    driver: bridge

volumes:
  db-data: